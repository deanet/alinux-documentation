--- 
layout: post_new
title: Install RHEL via Network and Auto Installation using Kickstart
date: 2011-04-10 08:39:56
categories: 
- install
- RHEL
- Network
- Kickstart
---


###. Preparing

{% highlight xml %}
[root@utcepos4 ~]# cp /usr/lib/syslinux/pxelinux.0 /tftpboot/linux-install/pxelinux.0
[root@utcepos4 ~]# cd /mnt/iso/images/pxeboot/
[root@utcepos4 pxeboot]# ls
initrd.img  README  TRANS.TBL  vmlinuz
[root@utcepos4 pxeboot]# cp * /tftpboot/linux-install/images/
[root@utcepos4 pxeboot]# ls /tftpboot/linux-install/images/
initrd.img  README  TRANS.TBL  vmlinuz
[root@utcepos4 pxeboot]# 
{% endhighlight %}


###. Configure

{% highlight xml %}
[root@utcepos4 pxeboot]# cd /tftpboot/
[root@utcepos4 tftpboot]# cat ./linux-install/pxelinux.cfg/default
default local
timeout 100
prompt 1
display msgs/boot.msg
F1 msgs/boot.msg
F2 msgs/general.msg
F3 msgs/expert.msg
F4 msgs/param.msg
F5 msgs/rescue.msg
F7 msgs/snake.msg


label 0
localboot 1


default linux
timeout 100

label linux
kernel images/vmlinuz
append initrd=images/initrd.img ramdisk_size=9216 noapic acpi=off
{% endhighlight %}


###. Set DHCP


{% highlight xml %}
[root@eptcproc5 tftpboot]# cat /etc/dhcpd.conf
ddns-update-style ad-hoc;

deny unknown-clients;
not authoritative;

option domain-name              "eptcproc5";
#option domain-name-servers      ???.???.???.???, ???.???.???.???;
option subnet-mask              255.255.255.0;

allow bootp;
allow booting;

option ip-forwarding    false;  # No IP forwarding
option mask-supplier    false;  # Don't respond to ICMP Mask req

subnet 192.168.2.0 netmask 255.255.255.0 {
  #option routers        192.168.2.11;
}

group {
  next-server 192.168.2.15;          # name of your TFTP server
  filename "linux-install/pxelinux.0";        # name of the bootloader program

## host client yang akan diinstall
  host eptcproc4 {
        hardware ethernet e4:1f:13:39:ee:58;
        fixed-address 192.168.2.40;
  }

  host epos4 {
        hardware ethernet  e4:1f:13:79:eb:30;
        fixed-address 192.168.2.41;
}
 host eptcproc8 {
        hardware ethernet  e4:1f:13:1a:c9:d4;
        fixed-address 192.168.2.42;
}

}
{% endhighlight %}

###. Enable tftp boot

{% highlight xml %}
[root@eptcproc5 tftpboot]# chkconfig tftp on
[root@eptcproc5 ~]# chkconfig --list tftp
tftp            on
[root@eptcproc5 ~]# 
{% endhighlight %}

make sure:

{% highlight xml %}
[root@eptcproc5 tftpboot]# cat /etc/xinetd.d/tftp
# default: off
# description: The tftp server serves files using the trivial file transfer \
#       protocol.  The tftp protocol is often used to boot diskless \
#       workstations, download configuration files to network-aware printers, \
#       and to start the installation process for some operating systems.
service tftp
{
        disable = no
        socket_type             = dgram
        protocol                = udp
        wait                    = yes
        user                    = root
        server                  = /usr/sbin/in.tftpd
        server_args             = -s /tftpboot
        per_source              = 11
        cps                     = 100 2
        flags                   = IPv4
}
{% endhighlight %}

###. start DHCP and restart Xinetd

{% highlight xml %}
[root@eptcproc5 ~]# service dhcpd restart
Shutting down dhcpd:                                       [  OK  ]
Starting dhcpd:                                            [  OK  ]
[root@eptcproc5 ~]# service xinetd restart
Stopping xinetd:                                           [  OK  ]
Starting xinetd:                                           [  OK  ]
[root@eptcproc5 ~]# 
{% endhighlight %}

 touch sample

{% highlight xml %}
[root@eptcproc5 tftpboot]# ls / > /tftpboot/test
{% endhighlight %}

###. Test from other machine:

{% highlight xml %}
[root@eptcproc6 ~]# tftp -v eptcproc5
Connected to eptcproc5 (192.168.2.15), port 69
tftp> get test
getting from eptcproc5:test to test [netascii]
Received 216 bytes in 0.6 seconds [3014 bit/s]
tftp> quit
[root@eptcproc6 ~]# 
{% endhighlight %}

It;s work, now autostart installation with kickstart:
when boot type:

{% highlight xml %}
1. linux ks=nfs:ip_server:/path/nama_file.ks
{% endhighlight %}

for NFS

{% highlight xml %}
2. linux ks=http:ip_server:/path/nama_file.ks
{% endhighlight %}

for http

{% highlight xml %}
3. linux ks=nfs:ip_server:/path/nama_file.ks
{% endhighlight %}



example of dot.ks (http://10.80.120.77/anaconda-ks.cfg) .

{% highlight xml lineos %}
# Kickstart file automatically generated by anaconda.
install
##NFS diset dulu di server 10.80.120.77/192.168.1.111 (contoh)
nfs --server=192.168.1.111 --dir=/mnt/iso/


key --skip
lang en_US.UTF-8
keyboard us
xconfig --startxonboot

#ip bisa diset disini
#network --device eth0 --bootproto static --ip 192.168.1.3 --netmask 255.255.255.0 --hostname utcadv3
#network --device eth1 --onboot no --bootproto dhcp --hostname utcadv3
network --device eth0 --onboot no --bootproto dhcp --hostname utcadv
rootpw --iscrypted $1$iUvlkRqn$nCMWCbazajhv0LKnAJ3QU.
firewall --enabled --port=22:tcp
authconfig --enableshadow --enablemd5
selinux --enforcing
timezone Asia/Jakarta
bootloader --location=mbr --driveorder=sda --append="noapic acpi=off rhgb quiet"
# The following is the partition information you requested
# Note that any partitions you deleted are not expressed
# here so unless you clear all partitions first, this is
# not guaranteed to work

##drive sda atau sdb atau sdc
clearpart --linux --drives=sda
part /boot --fstype ext3 --size=100
part /home --fstype ext3 --size=30000
part / --fstype ext3 --size=20000
part swap --size=8000
part /apps --fstype ext3 --size=100 --grow


##konfigurasi diatas untuk hardisk 146GB
##harap diperhatikan agar hardisk yang akan diinstall sama atau lebih besar.

## hasilnya berikut:
##[root@utcadv3 ~]# fdisk -l

##Disk /dev/sda: 146.8 GB, 146814976000 bytes
##255 heads, 63 sectors/track, 17849 cylinders
##Units = cylinders of 16065 * 512 = 8225280 bytes

##   Device Boot      Start         End      Blocks   Id  System
##/dev/sda1   *           1          13      104391   83  Linux
##/dev/sda2              14        3837    30716280   83  Linux
##/dev/sda3            3838        6387    20482875   83  Linux
##/dev/sda4            6388       17849    92068515    5  Extended
##/dev/sda5            6388        7407     8193118+  82  Linux swap / Solaris
##/dev/sda6            7408       17849    83875333+  83  Linux
##[root@utcadv3 ~]# df -h
##Filesystem            Size  Used Avail Use% Mounted on
##/dev/sda3              19G  2.6G   16G  15% /
##/dev/sda6              78G  184M   74G   1% /apps
##/dev/sda1              99M   12M   83M  13% /boot
##tmpfs                 2.0G     0  2.0G   0% /dev/shm
##eptcadv1:/home/pgadmin
                       30G  7.3G   21G  26% /home/pgadmin
##[root@utcadv3 ~]# 


##Grup paket yang akan diinstall
%packages
@admin-tools
@base
@core
@dialup
@editors
@gnome-desktop
@games
@graphical-internet
@graphics
@java
@kde-desktop
@legacy-software-support
@office
@printing
@sound-and-video
@text-internet
@base-x
kexec-tools
fipscheck
device-mapper-multipath
sgpio
emacs
libsane-hpaio
xorg-x11-utils
xorg-x11-server-Xnest
{% endhighlight %}

done :)

reference:

1. [http://mohammadthalif.wordpress.com/2010/03/05/installing-and-testing-tftpd-in-ubuntudebian/] (http://mohammadthalif.wordpress.com/2010/03/05/installing-and-testing-tftpd-in-ubuntudebian/)

